SUDO(8)                             BSD System Manager's Manual                            SUDO(8)

NAME
     sudo, sudoedit — execute a command as another user

SYNOPSIS
     sudo -h | -K | -k | -V
     sudo -v [-ABknS] [-g group] [-h host] [-p prompt] [-u user]
     sudo -l [-ABknS] [-g group] [-h host] [-p prompt] [-U user] [-u user] [command]
     sudo [-ABbEHnPS] [-C num] [-D directory] [-g group] [-h host] [-p prompt] [-R directory]
          [-r role] [-t type] [-T timeout] [-u user] [VAR=value] [-i | -s] [command]
     sudoedit [-ABknS] [-C num] [-D directory] [-g group] [-h host] [-p prompt] [-R directory]
          [-r role] [-t type] [-T timeout] [-u user] file ...

DESCRIPTION
     sudo allows a permitted user to execute a command as the superuser or another user, as speci‐
     fied by the security policy.  The invoking user's real (not effective) user-ID is used to de‐
     termine the user name with which to query the security policy.

     sudo supports a plugin architecture for security policies, auditing, and input/output log‐
     ging.  Third parties can develop and distribute their own plugins to work seamlessly with the
     sudo front-end.  The default security policy is sudoers, which is configured via the file
     /etc/sudoers, or via LDAP.  See the Plugins section for more information.

     The security policy determines what privileges, if any, a user has to run sudo.  The policy
     may require that users authenticate themselves with a password or another authentication
     mechanism.  If authentication is required, sudo will exit if the user's password is not en‐
     tered within a configurable time limit.  This limit is policy-specific; the default password
     prompt timeout for the sudoers security policy is 0 minutes.

     Security policies may support credential caching to allow the user to run sudo again for a
     period of time without requiring authentication.  By default, the sudoers policy caches cre‐
     dentials on a per-terminal basis for 15 minutes.  See the timestamp_type and
     timestamp_timeout options in sudoers(5) for more information.  By running sudo with the -v
     option, a user can update the cached credentials without running a command.

     On systems where sudo is the primary method of gaining superuser privileges, it is imperative
     to avoid syntax errors in the security policy configuration files.  For the default security
     policy, sudoers(5), changes to the configuration files should be made using the visudo(8)
     utility which will ensure that no syntax errors are introduced.

     When invoked as sudoedit, the -e option (described below), is implied.

     Security policies and audit plugins may log successful and failed attempts to run sudo.  If
     an I/O plugin is configured, the running command's input and output may be logged as well.

     The options are as follows:

     -A, --askpass
                 Normally, if sudo requires a password, it will read it from the user's terminal.
                 If the -A (askpass) option is specified, a (possibly graphical) helper program is
                 executed to read the user's password and output the password to the standard out‐
                 put.  If the SUDO_ASKPASS environment variable is set, it specifies the path to
                 the helper program.  Otherwise, if sudo.conf(5) contains a line specifying the
                 askpass program, that value will be used.  For example:

                     # Path to askpass helper program
                     Path askpass /usr/X11R6/bin/ssh-askpass

                 If no askpass program is available, sudo will exit with an error.

     -B, --bell  Ring the bell as part of the password prompt when a terminal is present.  This
                 option has no effect if an askpass program is used.

     -b, --background
                 Run the given command in the background.  Note that it is not possible to use
                 shell job control to manipulate background processes started by sudo.  Most in‐
                 teractive commands will fail to work properly in background mode.

     -C num, --close-from=num
                 Close all file descriptors greater than or equal to num before executing a com‐
                 mand.  Values less than three are not permitted.  By default, sudo will close all
                 open file descriptors other than standard input, standard output, and standard
                 error when executing a command.  The security policy may restrict the user's
                 ability to use this option.  The sudoers policy only permits use of the -C option
                 when the administrator has enabled the closefrom_override option.

     -D directory, --chdir=directory
                 Run the command in the specified directory instead of the current working direc‐
                 tory.  The security policy may return an error if the user does not have permis‐
                 sion to specify the working directory.

     -E, --preserve-env
                 Indicates to the security policy that the user wishes to preserve their existing
                 environment variables.  The security policy may return an error if the user does
                 not have permission to preserve the environment.

     --preserve-env=list
                 Indicates to the security policy that the user wishes to add the comma-separated
                 list of environment variables to those preserved from the user's environment.
                 The security policy may return an error if the user does not have permission to
                 preserve the environment.  This option may be specified multiple times.

     -e, --edit  Edit one or more files instead of running a command.  In lieu of a path name, the
                 string "sudoedit" is used when consulting the security policy.  If the user is
                 authorized by the policy, the following steps are taken:

                 1.   Temporary copies are made of the files to be edited with the owner set to
                      the invoking user.

                 2.   The editor specified by the policy is run to edit the temporary files.  The
                      sudoers policy uses the SUDO_EDITOR, VISUAL and EDITOR environment variables
                      (in that order).  If none of SUDO_EDITOR, VISUAL or EDITOR are set, the
                      first program listed in the editor sudoers(5) option is used.

                 3.   If they have been modified, the temporary files are copied back to their
                      original location and the temporary versions are removed.

                 To help prevent the editing of unauthorized files, the following restrictions are
                 enforced unless explicitly allowed by the security policy:

                 •  Symbolic links may not be edited (version 1.8.15 and higher).

                 •  Symbolic links along the path to be edited are not followed when the parent
                    directory is writable by the invoking user unless that user is root (version
                    1.8.16 and higher).

                 •  Files located in a directory that is writable by the invoking user may not be
                    edited unless that user is root (version 1.8.16 and higher).

                 Users are never allowed to edit device special files.

                 If the specified file does not exist, it will be created.  Note that unlike most
                 commands run by sudo, the editor is run with the invoking user's environment un‐
                 modified.  If the temporary file becomes empty after editing, the user will be
                 prompted before it is installed.  If, for some reason, sudo is unable to update a
                 file with its edited version, the user will receive a warning and the edited copy
                 will remain in a temporary file.

     -g group, --group=group
                 Run the command with the primary group set to group instead of the primary group
                 specified by the target user's password database entry.  The group may be either
                 a group name or a numeric group-ID (GID) prefixed with the ‘#’ character (e.g.,
                 #0 for GID 0).  When running a command as a GID, many shells require that the ‘#’
                 be escaped with a backslash (‘\’).  If no -u option is specified, the command
                 will be run as the invoking user.  In either case, the primary group will be set
                 to group.  The sudoers policy permits any of the target user's groups to be spec‐
                 ified via the -g option as long as the -P option is not in use.

     -H, --set-home
                 Request that the security policy set the HOME environment variable to the home
                 directory specified by the target user's password database entry.  Depending on
                 the policy, this may be the default behavior.

     -h, --help  Display a short help message to the standard output and exit.

     -h host, --host=host
                 Run the command on the specified host if the security policy plugin supports re‐
                 mote commands.  Note that the sudoers plugin does not currently support running
                 remote commands.  This may also be used in conjunction with the -l option to list
                 a user's privileges for the remote host.

     -i, --login
                 Run the shell specified by the target user's password database entry as a login
                 shell.  This means that login-specific resource files such as .profile,
                 .bash_profile, or .login will be read by the shell.  If a command is specified,
                 it is passed to the shell as a simple command using the -c option.  The command
                 and any arguments are concatenated, separated by spaces, after escaping each
                 character (including white space) with a backslash (‘\’) except for alphanumer‐
                 ics, underscores, hyphens, and dollar signs.  If no command is specified, an in‐
                 teractive shell is executed.  sudo attempts to change to that user's home direc‐
                 tory before running the shell.  The command is run with an environment similar to
                 the one a user would receive at log in.  Note that most shells behave differently
                 when a command is specified as compared to an interactive session; consult the
                 shell's manual for details.  The Command environment section in the sudoers(5)
                 manual documents how the -i option affects the environment in which a command is
                 run when the sudoers policy is in use.

     -K, --remove-timestamp
                 Similar to the -k option, except that it removes the user's cached credentials
                 entirely and may not be used in conjunction with a command or other option.  This
                 option does not require a password.  Not all security policies support credential
                 caching.

     -k, --reset-timestamp
                 When used without a command, invalidates the user's cached credentials.  In other
                 words, the next time sudo is run a password will be required.  This option does
                 not require a password, and was added to allow a user to revoke sudo permissions
                 from a .logout file.

                 When used in conjunction with a command or an option that may require a password,
                 this option will cause sudo to ignore the user's cached credentials.  As a re‐
                 sult, sudo will prompt for a password (if one is required by the security policy)
                 and will not update the user's cached credentials.

                 Not all security policies support credential caching.

     -l, --list  If no command is specified, list the allowed (and forbidden) commands for the in‐
                 voking user (or the user specified by the -U option) on the current host.  A
                 longer list format is used if this option is specified multiple times and the se‐
                 curity policy supports a verbose output format.

                 If a command is specified and is permitted by the security policy, the fully-
                 qualified path to the command is displayed along with any command line arguments.
                 If a command is specified but not allowed by the policy, sudo will exit with a
                 status value of 1.

     -n, --non-interactive
                 Avoid prompting the user for input of any kind.  If a password is required for
                 the command to run, sudo will display an error message and exit.

     -P, --preserve-groups
                 Preserve the invoking user's group vector unaltered.  By default, the sudoers
                 policy will initialize the group vector to the list of groups the target user is
                 a member of.  The real and effective group-IDs, however, are still set to match
                 the target user.

     -p prompt, --prompt=prompt
                 Use a custom password prompt with optional escape sequences.  The following per‐
                 cent (‘%’) escape sequences are supported by the sudoers policy:

                 %H  expanded to the host name including the domain name (only if the machine's
                     host name is fully qualified or the fqdn option is set in sudoers(5))

                 %h  expanded to the local host name without the domain name

                 %p  expanded to the name of the user whose password is being requested (respects
                     the rootpw, targetpw, and runaspw flags in sudoers(5))

                 %U  expanded to the login name of the user the command will be run as (defaults
                     to root unless the -u option is also specified)

                 %u  expanded to the invoking user's login name

                 %%  two consecutive ‘%’ characters are collapsed into a single ‘%’ character

                 The custom prompt will override the default prompt specified by either the secu‐
                 rity policy or the SUDO_PROMPT environment variable.  On systems that use PAM,
                 the custom prompt will also override the prompt specified by a PAM module unless
                 the passprompt_override flag is disabled in sudoers.

     -R directory, --chroot=directory
                 Change to the specified root directory (see chroot(8)) before running the com‐
                 mand.  The security policy may return an error if the user does not have permis‐
                 sion to specify the root directory.

     -r role, --role=role
                 Run the command with an SELinux security context that includes the specified
                 role.

     -S, --stdin
                 Write the prompt to the standard error and read the password from the standard
                 input instead of using the terminal device.

     -s, --shell
                 Run the shell specified by the SHELL environment variable if it is set or the
                 shell specified by the invoking user's password database entry.  If a command is
                 specified, it is passed to the shell as a simple command using the -c option.
                 The command and any arguments are concatenated, separated by spaces, after escap‐
                 ing each character (including white space) with a backslash (‘\’) except for al‐
                 phanumerics, underscores, hyphens, and dollar signs.  If no command is specified,
                 an interactive shell is executed.  Note that most shells behave differently when
                 a command is specified as compared to an interactive session; consult the shell's
                 manual for details.

     -t type, --type=type
                 Run the command with an SELinux security context that includes the specified
                 type.  If no type is specified, the default type is derived from the role.

     -U user, --other-user=user
                 Used in conjunction with the -l option to list the privileges for user instead of
                 for the invoking user.  The security policy may restrict listing other users'
                 privileges.  The sudoers policy only allows root or a user with the ALL privilege
                 on the current host to use this option.

     -T timeout, --command-timeout=timeout
                 Used to set a timeout for the command.  If the timeout expires before the command
                 has exited, the command will be terminated.  The security policy may restrict the
                 ability to set command timeouts.  The sudoers policy requires that user-specified
                 timeouts be explicitly enabled.

     -u user, --user=user
                 Run the command as a user other than the default target user (usually root).  The
                 user may be either a user name or a numeric user-ID (UID) prefixed with the ‘#’
                 character (e.g., #0 for UID 0).  When running commands as a UID, many shells re‐
                 quire that the ‘#’ be escaped with a backslash (‘\’).  Some security policies may
                 restrict UIDs to those listed in the password database.  The sudoers policy al‐
                 lows UIDs that are not in the password database as long as the targetpw option is
                 not set.  Other security policies may not support this.

     -V, --version
                 Print the sudo version string as well as the version string of any configured
                 plugins.  If the invoking user is already root, the -V option will display the
                 arguments passed to configure when sudo was built; plugins may display additional
                 information such as default options.

     -v, --validate
                 Update the user's cached credentials, authenticating the user if necessary.  For
                 the sudoers plugin, this extends the sudo timeout for another 15 minutes by de‐
                 fault, but does not run a command.  Not all security policies support cached cre‐
                 dentials.

     --          The -- option indicates that sudo should stop processing command line arguments.

     Options that take a value may only be specified once unless otherwise indicated in the de‐
     scription.  This is to help guard against problems caused by poorly written scripts that in‐
     voke sudo with user-controlled input.

     Environment variables to be set for the command may also be passed on the command line in the
     form of VAR=value, e.g., LD_LIBRARY_PATH=/usr/local/pkg/lib.  Variables passed on the command
     line are subject to restrictions imposed by the security policy plugin.  The sudoers policy
     subjects variables passed on the command line to the same restrictions as normal environment
     variables with one important exception.  If the setenv option is set in sudoers, the command
     to be run has the SETENV tag set or the command matched is ALL, the user may set variables
     that would otherwise be forbidden.  See sudoers(5) for more information.

COMMAND EXECUTION
     When sudo executes a command, the security policy specifies the execution environment for the
     command.  Typically, the real and effective user and group and IDs are set to match those of
     the target user, as specified in the password database, and the group vector is initialized
     based on the group database (unless the -P option was specified).

     The following parameters may be specified by security policy:

     •  real and effective user-ID

     •  real and effective group-ID

     •  supplementary group-IDs

     •  the environment list

     •  current working directory

     •  file creation mode mask (umask)

     •  SELinux role and type

     •  scheduling priority (aka nice value)

   Process model
     There are two distinct ways sudo can run a command.

     If an I/O logging plugin is configured or if the security policy explicitly requests it, a
     new pseudo-terminal (“pty”) is allocated and fork(2) is used to create a second sudo process,
     referred to as the monitor.  The monitor creates a new terminal session with itself as the
     leader and the pty as its controlling terminal, calls fork(2), sets up the execution environ‐
     ment as described above, and then uses the execve(2) system call to run the command in the
     child process.  The monitor exists to relay job control signals between the user's existing
     terminal and the pty the command is being run in.  This makes it possible to suspend and re‐
     sume the command.  Without the monitor, the command would be in what POSIX terms an “orphaned
     process group” and it would not receive any job control signals from the kernel.  When the
     command exits or is terminated by a signal, the monitor passes the command's exit status to
     the main sudo process and exits.  After receiving the command's exit status, the main sudo
     passes the command's exit status to the security policy's close function and exits.

     If no pty is used, sudo calls fork(2), sets up the execution environment as described above,
     and uses the execve(2) system call to run the command in the child process.  The main sudo
     process waits until the command has completed, then passes the command's exit status to the
     security policy's close function and exits.  As a special case, if the policy plugin does not
     define a close function, sudo will execute the command directly instead of calling fork(2)
     first.  The sudoers policy plugin will only define a close function when I/O logging is en‐
     abled, a pty is required, an SELinux role is specified, the command has an associated time‐
     out, or the pam_session or pam_setcred options are enabled.  Note that pam_session and
     pam_setcred are enabled by default on systems using PAM.

     On systems that use PAM, the security policy's close function is responsible for closing the
     PAM session.  It may also log the command's exit status.

   Signal handling
     When the command is run as a child of the sudo process, sudo will relay signals it receives
     to the command.  The SIGINT and SIGQUIT signals are only relayed when the command is being
     run in a new pty or when the signal was sent by a user process, not the kernel.  This pre‐
     vents the command from receiving SIGINT twice each time the user enters control-C.  Some sig‐
     nals, such as SIGSTOP and SIGKILL, cannot be caught and thus will not be relayed to the com‐
     mand.  As a general rule, SIGTSTP should be used instead of SIGSTOP when you wish to suspend
     a command being run by sudo.

     As a special case, sudo will not relay signals that were sent by the command it is running.
     This prevents the command from accidentally killing itself.  On some systems, the reboot(8)
     command sends SIGTERM to all non-system processes other than itself before rebooting the sys‐
     tem.  This prevents sudo from relaying the SIGTERM signal it received back to reboot(8),
     which might then exit before the system was actually rebooted, leaving it in a half-dead
     state similar to single user mode.  Note, however, that this check only applies to the com‐
     mand run by sudo and not any other processes that the command may create.  As a result, run‐
     ning a script that calls reboot(8) or shutdown(8) via sudo may cause the system to end up in
     this undefined state unless the reboot(8) or shutdown(8) are run using the exec() family of
     functions instead of system() (which interposes a shell between the command and the calling
     process).

     If no I/O logging plugins are loaded and the policy plugin has not defined a close() func‐
     tion, set a command timeout, or required that the command be run in a new pty, sudo may exe‐
     cute the command directly instead of running it as a child process.

   Plugins
     Plugins may be specified via Plugin directives in the sudo.conf(5) file.  They may be loaded
     as dynamic shared objects (on systems that support them), or compiled directly into the sudo
     binary.  If no sudo.conf(5) file is present, or if it doesn't contain any Plugin lines, sudo
     will use sudoers(5) for the policy, auditing, and I/O logging plugins.  See the sudo.conf(5)
     manual for details of the /etc/sudo.conf file and the sudo_plugin(5) manual for more informa‐
     tion about the sudo plugin architecture.

EXIT VALUE
     Upon successful execution of a command, the exit status from sudo will be the exit status of
     the program that was executed.  If the command terminated due to receipt of a signal, sudo
     will send itself the same signal that terminated the command.

     If the -l option was specified without a command, sudo will exit with a value of 0 if the
     user is allowed to run sudo and they authenticated successfully (as required by the security
     policy).  If a command is specified with the -l option, the exit value will only be 0 if the
     command is permitted by the security policy, otherwise it will be 1.

     If there is an authentication failure, a configuration/permission problem, or if the given
     command cannot be executed, sudo exits with a value of 1.  In the latter case, the error
     string is printed to the standard error.  If sudo cannot stat(2) one or more entries in the
     user's PATH, an error is printed to the standard error.  (If the directory does not exist or
     if it is not really a directory, the entry is ignored and no error is printed.)  This should
     not happen under normal circumstances.  The most common reason for stat(2) to return
     “permission denied” is if you are running an automounter and one of the directories in your
     PATH is on a machine that is currently unreachable.

SECURITY NOTES
     sudo tries to be safe when executing external commands.

     To prevent command spoofing, sudo checks "." and "" (both denoting current directory) last
     when searching for a command in the user's PATH (if one or both are in the PATH).  Depending
     on the security policy, the user's PATH environment variable may be modified, replaced, or
     passed unchanged to the program that sudo executes.

     Users should never be granted sudo privileges to execute files that are writable by the user
     or that reside in a directory that is writable by the user.  If the user can modify or re‐
     place the command there is no way to limit what additional commands they can run.

     Please note that sudo will normally only log the command it explicitly runs.  If a user runs
     a command such as sudo su or sudo sh, subsequent commands run from that shell are not subject
     to sudo's security policy.  The same is true for commands that offer shell escapes (including
     most editors).  If I/O logging is enabled, subsequent commands will have their input and/or
     output logged, but there will not be traditional logs for those commands.  Because of this,
     care must be taken when giving users access to commands via sudo to verify that the command
     does not inadvertently give the user an effective root shell.  For information on ways to ad‐
     dress this, please see the Preventing shell escapes section in sudoers(5).

     To prevent the disclosure of potentially sensitive information, sudo disables core dumps by
     default while it is executing (they are re-enabled for the command that is run).  This his‐
     torical practice dates from a time when most operating systems allowed set-user-ID processes
     to dump core by default.  To aid in debugging sudo crashes, you may wish to re-enable core
     dumps by setting “disable_coredump” to false in the sudo.conf(5) file as follows:

           Set disable_coredump false

     See the sudo.conf(5) manual for more information.

ENVIRONMENT
     sudo utilizes the following environment variables.  The security policy has control over the
     actual content of the command's environment.

     EDITOR           Default editor to use in -e (sudoedit) mode if neither SUDO_EDITOR nor
                      VISUAL is set.

     MAIL             Set to the mail spool of the target user when the -i option is specified, or
                      when env_reset is enabled in sudoers (unless MAIL is present in the env_keep
                      list).

     HOME             Set to the home directory of the target user when the -i or -H options are
                      specified, when the -s option is specified and set_home is set in sudoers,
                      when always_set_home is enabled in sudoers, or when env_reset is enabled in
                      sudoers and HOME is not present in the env_keep list.

     LOGNAME          Set to the login name of the target user when the -i option is specified,
                      when the set_logname option is enabled in sudoers, or when the env_reset op‐
                      tion is enabled in sudoers (unless LOGNAME is present in the env_keep list).

     PATH             May be overridden by the security policy.

     SHELL            Used to determine shell to run with -s option.

     SUDO_ASKPASS     Specifies the path to a helper program used to read the password if no ter‐
                      minal is available or if the -A option is specified.

     SUDO_COMMAND     Set to the command run by sudo, including command line arguments.  The com‐
                      mand line arguments are truncated at 4096 characters to prevent a potential
                      execution error.

     SUDO_EDITOR      Default editor to use in -e (sudoedit) mode.

     SUDO_GID         Set to the group-ID of the user who invoked sudo.

     SUDO_PROMPT      Used as the default password prompt unless the -p option was specified.

     SUDO_PS1         If set, PS1 will be set to its value for the program being run.

     SUDO_UID         Set to the user-ID of the user who invoked sudo.

     SUDO_USER        Set to the login name of the user who invoked sudo.

     USER             Set to the same value as LOGNAME, described above.

     VISUAL           Default editor to use in -e (sudoedit) mode if SUDO_EDITOR is not set.

FILES
     /etc/sudo.conf            sudo front-end configuration

EXAMPLES
     Note: the following examples assume a properly configured security policy.

     To get a file listing of an unreadable directory:

           $ sudo ls /usr/local/protected

     To list the home directory of user yaz on a machine where the file system holding ~yaz is not
     exported as root:

           $ sudo -u yaz ls ~yaz

     To edit the index.html file as user www:

           $ sudoedit -u www ~www/htdocs/index.html

     To view system logs only accessible to root and users in the adm group:

           $ sudo -g adm more /var/log/syslog

     To run an editor as jim with a different primary group:

           $ sudoedit -u jim -g audio ~jim/sound.txt

     To shut down a machine:

           $ sudo shutdown -r +15 "quick reboot"

     To make a usage listing of the directories in the /home partition.  Note that this runs the
     commands in a sub-shell to make the cd and file redirection work.

           $ sudo sh -c "cd /home ; du -s * | sort -rn > USAGE"

DIAGNOSTICS
     Error messages produced by sudo include:

     editing files in a writable directory is not permitted
           By default, sudoedit does not permit editing a file when any of the parent directories
           are writable by the invoking user.  This avoids a race condition that could allow the
           user to overwrite an arbitrary file.  See the sudoedit_checkdir option in sudoers(5)
           for more information.

     editing symbolic links is not permitted
           By default, sudoedit does not follow symbolic links when opening files.  See the
           sudoedit_follow option in sudoers(5) for more information.

     effective uid is not 0, is sudo installed setuid root?
           sudo was not run with root privileges.  The sudo binary must be owned by the root user
           and have the set-user-ID bit set.  Also, it must not be located on a file system
           mounted with the ‘nosuid’ option or on an NFS file system that maps uid 0 to an unpriv‐
           ileged uid.

     effective uid is not 0, is sudo on a file system with the 'nosuid' option set or an NFS file
           system without root privileges?
           sudo was not run with root privileges.  The sudo binary has the proper owner and per‐
           missions but it still did not run with root privileges.  The most common reason for
           this is that the file system the sudo binary is located on is mounted with the ‘nosuid’
           option or it is an NFS file system that maps uid 0 to an unprivileged uid.

     fatal error, unable to load plugins
           An error occurred while loading or initializing the plugins specified in sudo.conf(5).

     invalid environment variable name
           One or more environment variable names specified via the -E option contained an equal
           sign (‘=’).  The arguments to the -E option should be environment variable names with‐
           out an associated value.

     no password was provided
           When sudo tried to read the password, it did not receive any characters.  This may hap‐
           pen if no terminal is available (or the -S option is specified) and the standard input
           has been redirected from /dev/null.

     a terminal is required to read the password
           sudo needs to read the password but there is no mechanism available for it to do so.  A
           terminal is not present to read the password from, sudo has not been configured to read
           from the standard input, the -S option was not used, and no askpass helper has been
           specified either via the sudo.conf(5) file or the SUDO_ASKPASS environment variable.

     no writable temporary directory found
           sudoedit was unable to find a usable temporary directory in which to store its interme‐
           diate files.

     The “no new privileges” flag is set, which prevents sudo from running as root.
           sudo was run by a process that has the Linux “no new privileges” flag is set.  This
           causes the set-user-ID bit to be ignored when running an executable, which will prevent
           sudo from functioning.  The most likely cause for this is running sudo within a con‐
           tainer that sets this flag.  Check the documentation to see if it is possible to con‐
           figure the container such that the flag is not set.

     sudo must be owned by uid 0 and have the setuid bit set
           sudo was not run with root privileges.  The sudo binary does not have the correct owner
           or permissions.  It must be owned by the root user and have the set-user-ID bit set.

     sudoedit is not supported on this platform
           It is only possible to run sudoedit on systems that support setting the effective user-
           ID.

     timed out reading password
           The user did not enter a password before the password timeout (5 minutes by default)
           expired.

     you do not exist in the passwd database
           Your user-ID does not appear in the system passwd database.

     you may not specify environment variables in edit mode
           It is only possible to specify environment variables when running a command.  When
           editing a file, the editor is run with the user's environment unmodified.

SEE ALSO
     su(1), stat(2), login_cap(3), passwd(5), sudo.conf(5), sudo_plugin(5), sudoers(5),
     sudoers_timestamp(5), sudoreplay(8), visudo(8)

HISTORY
     See the HISTORY file in the sudo distribution (https://www.sudo.ws/history.html) for a brief
     history of sudo.

AUTHORS
     Many people have worked on sudo over the years; this version consists of code written primar‐
     ily by:

           Todd C. Miller

     See the CONTRIBUTORS file in the sudo distribution (https://www.sudo.ws/contributors.html)
     for an exhaustive list of people who have contributed to sudo.

CAVEATS
     There is no easy way to prevent a user from gaining a root shell if that user is allowed to
     run arbitrary commands via sudo.  Also, many programs (such as editors) allow the user to run
     commands via shell escapes, thus avoiding sudo's checks.  However, on most systems it is pos‐
     sible to prevent shell escapes with the sudoers(5) plugin's noexec functionality.

     It is not meaningful to run the cd command directly via sudo, e.g.,

           $ sudo cd /usr/local/protected

     since when the command exits the parent process (your shell) will still be the same.  Please
     see the EXAMPLES section for more information.

     Running shell scripts via sudo can expose the same kernel bugs that make set-user-ID shell
     scripts unsafe on some operating systems (if your OS has a /dev/fd/ directory, set-user-ID
     shell scripts are generally safe).

BUGS
     If you feel you have found a bug in sudo, please submit a bug report at
     https://bugzilla.sudo.ws/

SUPPORT
     Limited free support is available via the sudo-users mailing list, see
     https://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or search the archives.

DISCLAIMER
     sudo is provided “AS IS” and any express or implied warranties, including, but not limited
     to, the implied warranties of merchantability and fitness for a particular purpose are dis‐
     claimed.  See the LICENSE file distributed with sudo or https://www.sudo.ws/license.html for
     complete details.

Sudo 1.9.9                               January 19, 2022                               Sudo 1.9.9
APT-GET(8)                                      APT                                     APT-GET(8)

NAME
       apt-get - APT package handling utility -- command-line interface

SYNOPSIS
       apt-get [-asqdyfmubV] [-o=config_string] [-c=config_file] [-t=target_release]
               [-a=architecture] {update | upgrade | dselect-upgrade | dist-upgrade |
               install pkg [{=pkg_version_number | /target_release}]...  | remove pkg...  |
               purge pkg...  | source pkg [{=pkg_version_number | /target_release}]...  |
               build-dep pkg [{=pkg_version_number | /target_release}]...  |
               download pkg [{=pkg_version_number | /target_release}]...  | check | clean |
               autoclean | autoremove | {-v | --version} | {-h | --help}}

DESCRIPTION
       apt-get is the command-line tool for handling packages, and may be considered the user's
       "back-end" to other tools using the APT library. Several "front-end" interfaces exist, such
       as aptitude(8), synaptic(8) and wajig(1).

       Unless the -h, or --help option is given, one of the commands below must be present.

       update
           update is used to resynchronize the package index files from their sources. The indexes
           of available packages are fetched from the location(s) specified in
           /etc/apt/sources.list. For example, when using a Debian archive, this command retrieves
           and scans the Packages.gz files, so that information about new and updated packages is
           available. An update should always be performed before an upgrade or dist-upgrade.
           Please be aware that the overall progress meter will be incorrect as the size of the
           package files cannot be known in advance.

       upgrade
           upgrade is used to install the newest versions of all packages currently installed on
           the system from the sources enumerated in /etc/apt/sources.list. Packages currently
           installed with new versions available are retrieved and upgraded; under no
           circumstances are currently installed packages removed, or packages not already
           installed retrieved and installed. New versions of currently installed packages that
           cannot be upgraded without changing the install status of another package will be left
           at their current version. An update must be performed first so that apt-get knows that
           new versions of packages are available.

       dist-upgrade
           dist-upgrade in addition to performing the function of upgrade, also intelligently
           handles changing dependencies with new versions of packages; apt-get has a "smart"
           conflict resolution system, and it will attempt to upgrade the most important packages
           at the expense of less important ones if necessary. The dist-upgrade command may
           therefore remove some packages. The /etc/apt/sources.list file contains a list of
           locations from which to retrieve desired package files. See also apt_preferences(5) for
           a mechanism for overriding the general settings for individual packages.

       dselect-upgrade
           dselect-upgrade is used in conjunction with the traditional Debian packaging front-end,
           dselect(1).  dselect-upgrade follows the changes made by dselect(1) to the Status field
           of available packages, and performs the actions necessary to realize that state (for
           instance, the removal of old and the installation of new packages).

       install
           install is followed by one or more packages desired for installation or upgrading. Each
           package is a package name, not a fully qualified filename (for instance, in a Debian
           system, apt-utils would be the argument provided, not apt-utils_2.4.8_amd64.deb). All
           packages required by the package(s) specified for installation will also be retrieved
           and installed. The /etc/apt/sources.list file is used to locate the desired packages.
           If a hyphen is appended to the package name (with no intervening space), the identified
           package will be removed if it is installed. Similarly a plus sign can be used to
           designate a package to install. These latter features may be used to override decisions
           made by apt-get's conflict resolution system.

           A specific version of a package can be selected for installation by following the
           package name with an equals and the version of the package to select. This will cause
           that version to be located and selected for install. Alternatively a specific
           distribution can be selected by following the package name with a slash and the version
           of the distribution or the Archive name (stable, testing, unstable).

           Both of the version selection mechanisms can downgrade packages and must be used with
           care.

           This is also the target to use if you want to upgrade one or more already-installed
           packages without upgrading every package you have on your system. Unlike the "upgrade"
           target, which installs the newest version of all currently installed packages,
           "install" will install the newest version of only the package(s) specified. Simply
           provide the name of the package(s) you wish to upgrade, and if a newer version is
           available, it (and its dependencies, as described above) will be downloaded and
           installed.

           Finally, the apt_preferences(5) mechanism allows you to create an alternative
           installation policy for individual packages.

           If no package matches the given expression and the expression contains one of '.', '?'
           or '*' then it is assumed to be a POSIX regular expression, and it is applied to all
           package names in the database. Any matches are then installed (or removed). Note that
           matching is done by substring so 'lo.*' matches 'how-lo' and 'lowest'. If this is
           undesired, anchor the regular expression with a '^' or '$' character, or create a more
           specific regular expression.

           Fallback to regular expressions is deprecated in APT 2.0, has been removed in apt(8),
           except for anchored expressions, and will be removed from apt-get(8) in a future
           version. Use apt-patterns(5) instead.

       reinstall
           reinstall is an alias for install --reinstall.

       remove
           remove is identical to install except that packages are removed instead of installed.
           Note that removing a package leaves its configuration files on the system. If a plus
           sign is appended to the package name (with no intervening space), the identified
           package will be installed instead of removed.

       purge
           purge is identical to remove except that packages are removed and purged (any
           configuration files are deleted too).

       source
           source causes apt-get to fetch source packages. APT will examine the available packages
           to decide which source package to fetch. It will then find and download into the
           current directory the newest available version of that source package while respecting
           the default release, set with the option APT::Default-Release, the -t option or per
           package with the pkg/release syntax, if possible.

           The arguments are interpreted as binary and source package names. See the --only-source
           option if you want to change that.

           Source packages are tracked separately from binary packages via deb-src lines in the
           sources.list(5) file. This means that you will need to add such a line for each
           repository you want to get sources from; otherwise you will probably get either the
           wrong (too old/too new) source versions or none at all.

           If the --compile option is specified then the package will be compiled to a binary .deb
           using dpkg-buildpackage for the architecture as defined by the --host-architecture
           option. If --download-only is specified then the source package will not be unpacked.

           A specific source version can be retrieved by postfixing the source name with an equals
           and then the version to fetch, similar to the mechanism used for the package files.
           This enables exact matching of the source package name and version, implicitly enabling
           the APT::Get::Only-Source option.

           Note that source packages are not installed and tracked in the dpkg database like
           binary packages; they are simply downloaded to the current directory, like source
           tarballs.

       build-dep
           build-dep causes apt-get to install/remove packages in an attempt to satisfy the build
           dependencies for a source package. By default the dependencies are satisfied to build
           the package natively. If desired a host-architecture can be specified with the
           --host-architecture option instead.

           The arguments are interpreted as binary or source package names. See the --only-source
           option if you want to change that.

       satisfy
           satisfy causes apt-get to satisfy the given dependency strings. The dependency strings
           may have build profiles and architecture restriction list as in build dependencies.
           They may optionally be prefixed with "Conflicts: " to unsatisfy the dependency string.
           Multiple strings of the same type can be specified.

           Example: apt-get satisfy "foo" "Conflicts: bar" "baz (>> 1.0) | bar (= 2.0), moo"

           The legacy operator '</>' is not supported, use '<=/>=' instead.

       check
           check is a diagnostic tool; it updates the package cache and checks for broken
           dependencies.

       download
           download will download the given binary package into the current directory.

       clean
           clean clears out the local repository of retrieved package files. It removes everything
           but the lock file from /var/cache/apt/archives/ and /var/cache/apt/archives/partial/.

       autoclean (and the auto-clean alias since 1.1)
           Like clean, autoclean clears out the local repository of retrieved package files. The
           difference is that it only removes package files that can no longer be downloaded, and
           are largely useless. This allows a cache to be maintained over a long period without it
           growing out of control. The configuration option APT::Clean-Installed will prevent
           installed packages from being erased if it is set to off.

       autoremove (and the auto-remove alias since 1.1)
           autoremove is used to remove packages that were automatically installed to satisfy
           dependencies for other packages and are now no longer needed.

       changelog
           changelog tries to download the changelog of a package and displays it through
           sensible-pager. By default it displays the changelog for the version that is installed.
           However, you can specify the same options as for the install command.

       indextargets
           Displays by default a deb822 formatted listing of information about all data files (aka
           index targets) apt-get update would download. Supports a --format option to modify the
           output format as well as accepts lines of the default output to filter the records by.
           The command is mainly used as an interface for external tools working with APT to get
           information as well as filenames for downloaded files so they can use them as well
           instead of downloading them again on their own. Detailed documentation is omitted here
           and can instead be found in the file /usr/share/doc/apt/acquire-additional-files.md.gz
           shipped by the apt-doc package.

OPTIONS
       All command line options may be set using the configuration file, the descriptions indicate
       the configuration option to set. For boolean options you can override the config file by
       using something like -f-,--no-f, -f=no or several other variations.

       --no-install-recommends
           Do not consider recommended packages as a dependency for installing. Configuration
           Item: APT::Install-Recommends.

       --install-suggests
           Consider suggested packages as a dependency for installing. Configuration Item:
           APT::Install-Suggests.

       -d, --download-only
           Download only; package files are only retrieved, not unpacked or installed.
           Configuration Item: APT::Get::Download-Only.

       -f, --fix-broken
           Fix; attempt to correct a system with broken dependencies in place. This option, when
           used with install/remove, can omit any packages to permit APT to deduce a likely
           solution. If packages are specified, these have to completely correct the problem. The
           option is sometimes necessary when running APT for the first time; APT itself does not
           allow broken package dependencies to exist on a system. It is possible that a system's
           dependency structure can be so corrupt as to require manual intervention (which usually
           means using dpkg --remove to eliminate some of the offending packages). Use of this
           option together with -m may produce an error in some situations. Configuration Item:
           APT::Get::Fix-Broken.

       -m, --ignore-missing, --fix-missing
           Ignore missing packages; if packages cannot be retrieved or fail the integrity check
           after retrieval (corrupted package files), hold back those packages and handle the
           result. Use of this option together with -f may produce an error in some situations. If
           a package is selected for installation (particularly if it is mentioned on the command
           line) and it could not be downloaded then it will be silently held back. Configuration
           Item: APT::Get::Fix-Missing.

       --no-download
           Disables downloading of packages. This is best used with --ignore-missing to force APT
           to use only the .debs it has already downloaded. Configuration Item:
           APT::Get::Download.

       -q, --quiet
           Quiet; produces output suitable for logging, omitting progress indicators. More q's
           will produce more quiet up to a maximum of 2. You can also use -q=# to set the quiet
           level, overriding the configuration file. Note that quiet level 2 implies -y; you
           should never use -qq without a no-action modifier such as -d, --print-uris or -s as APT
           may decide to do something you did not expect. Configuration Item: quiet.

       -s, --simulate, --just-print, --dry-run, --recon, --no-act
           No action; perform a simulation of events that would occur based on the current system
           state but do not actually change the system. Locking will be disabled
           (Debug::NoLocking) so the system state could change while apt-get is running.
           Simulations can also be executed by non-root users which might not have read access to
           all apt configuration distorting the simulation. A notice expressing this warning is
           also shown by default for non-root users (APT::Get::Show-User-Simulation-Note).
           Configuration Item: APT::Get::Simulate.

           Simulated runs print out a series of lines, each representing a dpkg operation:
           configure (Conf), remove (Remv) or unpack (Inst). Square brackets indicate broken
           packages, and empty square brackets indicate breaks that are of no consequence (rare).

       -y, --yes, --assume-yes
           Automatic yes to prompts; assume "yes" as answer to all prompts and run
           non-interactively. If an undesirable situation, such as changing a held package, trying
           to install an unauthenticated package or removing an essential package occurs then
           apt-get will abort. Configuration Item: APT::Get::Assume-Yes.

       --assume-no
           Automatic "no" to all prompts. Configuration Item: APT::Get::Assume-No.

       --no-show-upgraded
           Do not show a list of all packages that are to be upgraded. Configuration Item:
           APT::Get::Show-Upgraded.

       -V, --verbose-versions
           Show full versions for upgraded and installed packages. Configuration Item:
           APT::Get::Show-Versions.

       -a, --host-architecture
           This option controls the architecture packages are built for by apt-get source
           --compile and how cross-builddependencies are satisfied. By default is it not set which
           means that the host architecture is the same as the build architecture (which is
           defined by APT::Architecture). Configuration Item: APT::Get::Host-Architecture.

       -P, --build-profiles
           This option controls the activated build profiles for which a source package is built
           by apt-get source --compile and how build dependencies are satisfied. By default no
           build profile is active. More than one build profile can be activated at a time by
           concatenating them with a comma. Configuration Item: APT::Build-Profiles.

       -b, --compile, --build
           Compile source packages after downloading them. Configuration Item: APT::Get::Compile.

       --ignore-hold
           Ignore package holds; this causes apt-get to ignore a hold placed on a package. This
           may be useful in conjunction with dist-upgrade to override a large number of undesired
           holds. Configuration Item: APT::Ignore-Hold.

       --with-new-pkgs
           Allow installing new packages when used in conjunction with upgrade. This is useful if
           the update of an installed package requires new dependencies to be installed. Instead
           of holding the package back upgrade will upgrade the package and install the new
           dependencies. Note that upgrade with this option will never remove packages, only allow
           adding new ones. Configuration Item: APT::Get::Upgrade-Allow-New.

       --no-upgrade
           Do not upgrade packages; when used in conjunction with install, no-upgrade will prevent
           packages on the command line from being upgraded if they are already installed.
           Configuration Item: APT::Get::Upgrade.

       --only-upgrade
           Do not install new packages; when used in conjunction with install, only-upgrade will
           install upgrades for already installed packages only and ignore requests to install new
           packages. Configuration Item: APT::Get::Only-Upgrade.

       --allow-downgrades
           This is a dangerous option that will cause apt to continue without prompting if it is
           doing downgrades. It should not be used except in very special situations. Using it can
           potentially destroy your system! Configuration Item: APT::Get::allow-downgrades.
           Introduced in APT 1.1.

       --allow-remove-essential
           Force yes; this is a dangerous option that will cause apt to continue without prompting
           if it is removing essentials. It should not be used except in very special situations.
           Using it can potentially destroy your system! Configuration Item:
           APT::Get::allow-remove-essential. Introduced in APT 1.1.

       --allow-change-held-packages
           Force yes; this is a dangerous option that will cause apt to continue without prompting
           if it is changing held packages. It should not be used except in very special
           situations. Using it can potentially destroy your system! Configuration Item:
           APT::Get::allow-change-held-packages. Introduced in APT 1.1.

       --force-yes
           Force yes; this is a dangerous option that will cause apt to continue without prompting
           if it is doing something potentially harmful. It should not be used except in very
           special situations. Using force-yes can potentially destroy your system! Configuration
           Item: APT::Get::force-yes. This is deprecated and replaced by --allow-unauthenticated ,
           --allow-downgrades , --allow-remove-essential , --allow-change-held-packages in 1.1.

       --print-uris
           Instead of fetching the files to install their URIs are printed. Each URI will have the
           path, the destination file name, the size and the expected MD5 hash. Note that the file
           name to write to will not always match the file name on the remote site! This also
           works with the source and update commands. When used with the update command the MD5
           and size are not included, and it is up to the user to decompress any compressed files.
           Configuration Item: APT::Get::Print-URIs.

       --purge
           Use purge instead of remove for anything that would be removed. An asterisk ("*") will
           be displayed next to packages which are scheduled to be purged.  remove --purge is
           equivalent to the purge command. Configuration Item: APT::Get::Purge.

       --reinstall
           Re-install packages that are already installed and at the newest version. Configuration
           Item: APT::Get::ReInstall.

       --list-cleanup
           This option is on by default; use --no-list-cleanup to turn it off. When it is on,
           apt-get will automatically manage the contents of /var/lib/apt/lists to ensure that
           obsolete files are erased. The only reason to turn it off is if you frequently change
           your sources list. Configuration Item: APT::Get::List-Cleanup.

       -t, --target-release, --default-release
           This option controls the default input to the policy engine; it creates a default pin
           at priority 990 using the specified release string. This overrides the general settings
           in /etc/apt/preferences. Specifically pinned packages are not affected by the value of
           this option. In short, this option lets you have simple control over which distribution
           packages will be retrieved from. Some common examples might be -t '2.1*', -t unstable
           or -t sid. Configuration Item: APT::Default-Release; see also the apt_preferences(5)
           manual page.

       --trivial-only
           Only perform operations that are 'trivial'. Logically this can be considered related to
           --assume-yes; where --assume-yes will answer yes to any prompt, --trivial-only will
           answer no. Configuration Item: APT::Get::Trivial-Only.

       --mark-auto
           After successful installation, mark all freshly installed packages as automatically
           installed, which will cause each of the packages to be removed when no more manually
           installed packages depend on this package. This is equally to running apt-mark auto for
           all installed packages. Configuration Item: APT::Get::Mark-Auto.

       --no-remove
           If any packages are to be removed apt-get immediately aborts without prompting.
           Configuration Item: APT::Get::Remove.

       --auto-remove, --autoremove
           If the command is either install or remove, then this option acts like running the
           autoremove command, removing unused dependency packages. Configuration Item:
           APT::Get::AutomaticRemove.

       --only-source
           Only has meaning for the source and build-dep commands. Indicates that the given source
           names are not to be mapped through the binary table. This means that if this option is
           specified, these commands will only accept source package names as arguments, rather
           than accepting binary package names and looking up the corresponding source package.
           Configuration Item: APT::Get::Only-Source.

       --diff-only, --dsc-only, --tar-only
           Download only the diff, dsc, or tar file of a source archive. Configuration Item:
           APT::Get::Diff-Only, APT::Get::Dsc-Only, and APT::Get::Tar-Only.

       --arch-only
           Only process architecture-dependent build-dependencies. Configuration Item:
           APT::Get::Arch-Only.

       --indep-only
           Only process architecture-independent build-dependencies. Configuration Item:
           APT::Get::Indep-Only.

       --allow-unauthenticated
           Ignore if packages can't be authenticated and don't prompt about it. This can be useful
           while working with local repositories, but is a huge security risk if data authenticity
           isn't ensured in another way by the user itself. The usage of the Trusted option for
           sources.list(5) entries should usually be preferred over this global override.
           Configuration Item: APT::Get::AllowUnauthenticated.

       --no-allow-insecure-repositories
           Forbid the update command to acquire unverifiable data from configured sources. APT
           will fail at the update command for repositories without valid cryptographically
           signatures. See also apt-secure(8) for details on the concept and the implications.
           Configuration Item: Acquire::AllowInsecureRepositories.

       --allow-releaseinfo-change
           Allow the update command to continue downloading data from a repository which changed
           its information of the release contained in the repository indicating e.g a new major
           release. APT will fail at the update command for such repositories until the change is
           confirmed to ensure the user is prepared for the change. See also apt-secure(8) for
           details on the concept and configuration.

           Specialist options (--allow-releaseinfo-change-field) exist to allow changes only for
           certain fields like origin, label, codename, suite, version and defaultpin. See also
           apt_preferences(5). Configuration Item: Acquire::AllowReleaseInfoChange.

       --show-progress
           Show user friendly progress information in the terminal window when packages are
           installed, upgraded or removed. For a machine parsable version of this data see
           README.progress-reporting in the apt doc directory. Configuration Items: Dpkg::Progress
           and Dpkg::Progress-Fancy.

       --with-source filename
           Adds the given file as a source for metadata. Can be repeated to add multiple files.
           See --with-source description in apt-cache(8) for further details.

       -eany, --error-on=any
           Fail the update command if any error occured, even a transient one.

       -h, --help
           Show a short usage summary.

       -v, --version
           Show the program version.

       -c, --config-file
           Configuration File; Specify a configuration file to use. The program will read the
           default configuration file and then this configuration file. If configuration settings
           need to be set before the default configuration files are parsed specify a file with
           the APT_CONFIG environment variable. See apt.conf(5) for syntax information.

       -o, --option
           Set a Configuration Option; This will set an arbitrary configuration option. The syntax
           is -o Foo::Bar=bar.  -o and --option can be used multiple times to set different
           options.

FILES
       /etc/apt/sources.list
           Locations to fetch packages from. Configuration Item: Dir::Etc::SourceList.

       /etc/apt/sources.list.d/
           File fragments for locations to fetch packages from. Configuration Item:
           Dir::Etc::SourceParts.

       /etc/apt/apt.conf
           APT configuration file. Configuration Item: Dir::Etc::Main.

       /etc/apt/apt.conf.d/
           APT configuration file fragments. Configuration Item: Dir::Etc::Parts.

       /etc/apt/preferences
           Version preferences file. This is where you would specify "pinning", i.e. a preference
           to get certain packages from a separate source or from a different version of a
           distribution. Configuration Item: Dir::Etc::Preferences.

       /etc/apt/preferences.d/
           File fragments for the version preferences. Configuration Item:
           Dir::Etc::PreferencesParts.

       /var/cache/apt/archives/
           Storage area for retrieved package files. Configuration Item: Dir::Cache::Archives.

       /var/cache/apt/archives/partial/
           Storage area for package files in transit. Configuration Item: Dir::Cache::Archives
           (partial will be implicitly appended)

       /var/lib/apt/lists/
           Storage area for state information for each package resource specified in
           sources.list(5) Configuration Item: Dir::State::Lists.

       /var/lib/apt/lists/partial/
           Storage area for state information in transit. Configuration Item: Dir::State::Lists
           (partial will be implicitly appended)

SEE ALSO
       apt-cache(8), apt-cdrom(8), dpkg(1), sources.list(5), apt.conf(5), apt-config(8), apt-
       secure(8), The APT User's guide in /usr/share/doc/apt-doc/, apt_preferences(5), the APT
       Howto.

DIAGNOSTICS
       apt-get returns zero on normal operation, decimal 100 on error.

BUGS
       APT bug page[1]. If you wish to report a bug in APT, please see
       /usr/share/doc/debian/bug-reporting.txt or the reportbug(1) command.

AUTHORS
       Jason Gunthorpe

       APT team

NOTES
        1. APT bug page
           http://bugs.debian.org/src:apt

APT 2.4.8                                 08 January 2021                               APT-GET(8)
INSTALL(1)                                 User Commands                                INSTALL(1)

NAME
       install - copy files and set attributes

SYNOPSIS
       install [OPTION]... [-T] SOURCE DEST
       install [OPTION]... SOURCE... DIRECTORY
       install [OPTION]... -t DIRECTORY SOURCE...
       install [OPTION]... -d DIRECTORY...

DESCRIPTION
       This  install  program  copies  files  (often just compiled) into destination locations you
       choose.  If you want to download and install a ready-to-use package on a GNU/Linux  system,
       you should instead be using a package manager like yum(1) or apt-get(1).

       In  the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to the existing DIREC‐
       TORY, while setting permission modes and owner/group.  In the 4th form, create  all  compo‐
       nents of the given DIRECTORY(ies).

       Mandatory arguments to long options are mandatory for short options too.

       --backup[=CONTROL]
              make a backup of each existing destination file

       -b     like --backup but does not accept an argument

       -c     (ignored)

       -C, --compare
              compare  each pair of source and destination files, and in some cases, do not modify
              the destination at all

       -d, --directory
              treat all arguments as directory names; create all components of the  specified  di‐
              rectories

       -D     create  all  leading components of DEST except the last, or all components of --tar‐
              get-directory, then copy SOURCE to DEST

       -g, --group=GROUP
              set group ownership, instead of process' current group

       -m, --mode=MODE
              set permission mode (as in chmod), instead of rwxr-xr-x

       -o, --owner=OWNER
              set ownership (super-user only)

       -p, --preserve-timestamps
              apply access/modification times of SOURCE files to corresponding destination files

       -s, --strip
              strip symbol tables

       --strip-program=PROGRAM
              program used to strip binaries

       -S, --suffix=SUFFIX
              override the usual backup suffix

       -t, --target-directory=DIRECTORY
              copy all SOURCE arguments into DIRECTORY

       -T, --no-target-directory
              treat DEST as a normal file

       -v, --verbose
              print the name of each directory as it is created

       --preserve-context
              preserve SELinux security context

       -Z     set SELinux security context of destination file and each created directory  to  de‐
              fault type

       --context[=CTX]
              like  -Z,  or  if CTX is specified then set the SELinux or SMACK security context to
              CTX

       --help display this help and exit

       --version
              output version information and exit

       The backup suffix is '~', unless set with --suffix or  SIMPLE_BACKUP_SUFFIX.   The  version
       control method may be selected via the --backup option or through the VERSION_CONTROL envi‐
       ronment variable.  Here are the values:

       none, off
              never make backups (even if --backup is given)

       numbered, t
              make numbered backups

       existing, nil
              numbered if numbered backups exist, simple otherwise

       simple, never
              always make simple backups

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright © 2020 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later
       <https://gnu.org/licenses/gpl.html>.
       This  is  free software: you are free to change and redistribute it.  There is NO WARRANTY,
       to the extent permitted by law.

SEE ALSO
       Full documentation <https://www.gnu.org/software/coreutils/install>
       or available locally via: info '(coreutils) install invocation'

GNU coreutils 8.32                         February 2022                                INSTALL(1)
